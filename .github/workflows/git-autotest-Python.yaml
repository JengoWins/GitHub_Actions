name: Python Tests Contact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Запускаем тесты в несколько потоков с разными портами
        port: [9222, 9223, 9224, 9225]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get install -y wget unzip
        
    - name: Install Latest Chrome for Testing and ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip jq
        
        # Получаем последнюю стабильную версию через официальное API
        LATEST_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json" | jq -r '.channels.Stable.version')
        
        echo "Устанавливаем Chrome for Testing версии: $LATEST_VERSION"
        
        # Устанавливаем Chrome for Testing
        wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$LATEST_VERSION/linux64/chrome-linux64.zip"
        unzip -q chrome-linux64.zip -d chrome-for-testing
        sudo mv chrome-for-testing/chrome-linux64 /opt/chrome-for-testing
        sudo ln -sf /opt/chrome-for-testing/chrome /usr/local/bin/chrome-for-testing
        
        # Устанавливаем соответствующий ChromeDriver
        wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$LATEST_VERSION/linux64/chromedriver-linux64.zip"
        unzip -q chromedriver-linux64.zip -d chromedriver
        sudo mv chromedriver/chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
        # Очистка временных файлов
        rm -rf chrome-linux64.zip chrome-for-testing chromedriver-linux64.zip chromedriver
        
    - name: Verify installations
      run: |
        echo "=== Chrome for Testing ==="
        /opt/chrome-for-testing/chrome --version
        echo "=== ChromeDriver ==="
        chromedriver --version
        
    - name: Create unique Chrome profiles
      run: |
        # Создаем уникальные директории для профилей Chrome
        mkdir -p /tmp/chrome_profiles
        for i in 1 2 3 4; do
          mkdir -p /tmp/chrome_profiles/profile_$i
        done
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r AutoTest/requirements.txt
        pip install pytest pytest-html
        pip install pytest-xdist
        pip install pytest-rerunfailures pytest-timeout

    - name: Set environment variables for Chrome
      run: |
        # Устанавливаем переменные окружения для Chrome
        echo "CHROME_USER_DATA_DIR=/tmp/chrome_profiles/profile_${{ strategy.matix.port }}" >> $GITHUB_ENV
        echo "REMOTE_DEBUGGING_PORT=${{ matrix.port }}" >> $GITHUB_ENV
        
    - name: Run tests with isolated Chrome instances
      run: |
        cd /home/runner/work/GitHub_Actions/GitHub_Actions
        
        # Копируем необходимые файлы
        cp -r ./AutoTest/Pages .
        
        # Запускаем тесты с изоляцией через xdist
        python -m pytest AutoTest/Test-Prog/ -k "test_positive_form_submission" -v \
          --html=report.html \
          --self-contained-html \
          --timeout=120 \
          -n 1  # Запускаем в одном процессе для изоляции
        
    - name: Cleanup Chrome profiles
      run: |
        # Очищаем временные профили
        rm -rf /tmp/chrome_profiles
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-report-${{ matrix.port }}
        path: |
          report.html
        retention-days: 30
